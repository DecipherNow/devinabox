---

- name: Install kubectl
  command: snap install kubectl --classic
  become: yes

- name: Install helm
  command: snap install helm --classic --channel=3.2
  become: yes

- name: Install k3d
  shell: export TAG=v3.1.2 && curl -s https://raw.githubusercontent.com/rancher/k3d/main/install.sh | bash

- name: Install Golang
  command: snap install go --classic
  become: yes

- name: Create Golang Dir
  file:
    path: "{{ item.stdout }}/go"
    state: directory
  with_items:
    - "{{ user_home }}"

- name: Change Bashrc GOLANG Path
  lineinfile: path="{{ item.stdout }}/.bashrc" regexp='^export GOPATH=\$HOME:{{ item.stdout }}/go' line="export GOPATH=$HOME:{{ item.stdout }}/go" state=present
  with_items:
    - "{{ user_home }}"

- name: Alias kc to kubectl
  lineinfile: path="{{ item.stdout }}/.bashrc" regexp='^alias kc="kubectl"' line='alias kc="kubectl"' state=present
  with_items:
    - "{{ user_home }}"

- name: Install docker
  package:
    name: docker.io
    state: present
  become: yes

- name: Install make
  package:
    name: build-essential
    state: present
  become: yes

- name: Install docker helper pass
  package:
    name: pass
    state: present
  become: yes

- name: Install docker helper gnupg2
  package:
    name: gnupg2
    state: present
  become: yes

- name: Install dockercompose
  package:
    name: docker-compose
    state: present
  become: yes

- name: Add user to docker group
  user:
    name: "{{ ansible_ssh_user }}"
    append: yes
    groups: docker
  become: yes

- name: Install Minikube
  script: "../files/install.sh {{ item.stdout }}"
  args:
    creates: "{{ item.stdout }}/bin/minikube"
  with_items:
    - "{{ user_home }}"

- name: Install gmenv
  command: git clone https://github.com/greymatter-io/gmenv.git {{ item.stdout }}/.gmenv
  with_items:
    - "{{ user_home }}"

- name: Add gmenv to PATH
  lineinfile: path="{{ item.stdout }}/.bashrc" regexp='^export PATH="$HOME/.gmenv/bin:$PATH"' line='export PATH="$HOME/.gmenv/bin:$PATH"' state=present
  with_items:
    - "{{ user_home }}"

- name: Set Credentials on remote
  copy:
    src: ../../../.credentials
    dest: "{{ item.stdout }}/.gmenv/credentials"
    owner: ubuntu
    group: ubuntu
    mode: '0600'
  with_items:
    - "{{ user_home }}"

- name: Install Grey Matter CLI
  shell: GMENV_REPO=development {{ item.stdout }}/.gmenv/bin/gmenv install latest && rm -f {{ item.stdout }}/.gmenv/credentials > /dev/null
  with_items:
    - "{{ user_home }}"

- name: Set Grey Matter version
  command: "{{ item.stdout }}/.gmenv/bin/gmenv use latest"
  with_items:
    - "{{ user_home }}"

- name: Alias gm to greymatter
  lineinfile: path="{{ item.stdout }}/.bashrc" regexp='^alias gm="greymatter"' line='alias gm="greymatter"' state=present
  with_items:
    - "{{ user_home }}"

- name: Configure Grey Matter CLI
  blockinfile:
    path: "{{ item.stdout }}/.bashrc"
    block: "{{ lookup('file', '../files/gm_config.txt') }}"
  with_items:
    - "{{ user_home }}"

- name: Add bash_functions file
  copy:
    src: ../files/bash_functions
    dest: "{{ item.stdout }}/.bash_functions"
    owner: ubuntu
    group: ubuntu
    mode: '0600'
  with_items:
    - "{{ user_home }}"

- name: Source bash_functions file
  lineinfile:
    dest: "{{ item.stdout }}/.bashrc"
    line: "source $HOME/.bash_functions"
  with_items:
    - "{{ user_home }}"